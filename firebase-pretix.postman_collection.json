{
	"info": {
		"_postman_id": "cf152b2e-8cc4-4e9d-9637-432e0ec32b1d",
		"name": "Unicon Firebase",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "users/:uid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{id_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/api/users/{{user_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Get an existing user record"
					},
					"response": []
				},
				{
					"name": "users/:uid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{id_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "displayName",
									"value": "Test User",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/api/users/{{user_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Update a user record"
					},
					"response": []
				},
				{
					"name": "users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{id_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{API_URL}}/api/users/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						},
						"description": "Create a new user record"
					},
					"response": []
				},
				{
					"name": "users/:uid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							}
						],
						"url": {
							"raw": "{{API_URL}}/api/users/{{user_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Get an existing user record"
					},
					"response": []
				},
				{
					"name": "users/:uid/password-reset",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "displayName",
									"value": "Test User",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{API_URL}}/api/users/{{user_id}}/password-reset",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}",
								"password-reset"
							]
						},
						"description": "Update a user record"
					},
					"response": []
				},
				{
					"name": "users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{id_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_URL}}/api/users",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Get all users"
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"id_token\", jsonData.idToken);",
									"pm.variables.set(\"user_id\", jsonData.localId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\",\n    \"returnSecureToken\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key={{API_KEY}}",
							"protocol": "https",
							"host": [
								"identitytoolkit",
								"googleapis",
								"com"
							],
							"path": [
								"v1",
								"accounts:signInWithPassword"
							],
							"query": [
								{
									"key": "key",
									"value": "{{API_KEY}}"
								}
							]
						},
						"description": "Retrieve idToken from Firebase"
					},
					"response": []
				}
			],
			"description": "All request concerning the REST API at /api",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "pretix",
			"item": [
				{
					"name": "new-order",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/pretix/new-order",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"pretix",
								"new-order"
							]
						},
						"description": "Webhook endpoint for Pretix on paid orders"
					},
					"response": []
				},
				{
					"name": "deleted-order",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/pretix/deleted-order",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"pretix",
								"deleted-order"
							]
						},
						"description": "Webhook endpoint for Pretix on paid orders"
					},
					"response": []
				}
			],
			"description": "Webhook endpoints for Pretix",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const env = pm.environment.get('ENVIRONMENT');",
					"if(env === 'dev' || env === 'development'){",
					"    const api_url = pm.collectionVariables.get('DEV_URL');",
					"    pm.collectionVariables.set('API_URL', api_url)",
					"} else if(env === 'prod' || env === 'production'){",
					"    pm.collectionVariables.set('API_URL', pm.variables.get('PROD_URL'))",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "PROD_URL",
			"value": "<firebase_prod_url>"
		},
		{
			"key": "DEV_URL",
			"value": "<firebase_dev_url>"
		},
		{
			"key": "API_KEY",
			"value": "<firebase_api_key>"
		},
		{
			"key": "email",
			"value": "user@example.com"
		},
		{
			"key": "password",
			"value": "supersecret"
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "id_token",
			"value": ""
		},
		{
			"key": "API_URL",
			"value": ""
		}
	]
}